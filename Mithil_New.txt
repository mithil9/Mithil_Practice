import java.util.*;
import java.io.*;

public class Helloworld {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        String[] data=new Str0ing[2];
        System.out.println("Enter Any Value");
        data[0]=s.next();
        System.out.println("Enter Any Value separated by Comma");
        data[1]=s.next();
        System.out.println(ArrayChallenge(data));
    }

    private static String ArrayChallenge(String[] strArr) {
        System.out.println("Base string: "+strArr[0]);
        System.out.println("Secondary string: "+strArr[1]);
	String message = "Result : Not possible";
        String baseString=strArr[0];
        List<String> subStrings = getTokens(strArr[1]);
        String[] subStringList = subStrings.toArray(new String[subStrings.size()]);
        Arrays.sort(subStringList, (val1, val2)->Integer.compare(val1.length(), val2.length()));
        String value1="";
        String value2="";
        for(int i=subStringList.length-1;i>=0;i--) {
            if (baseString.toLowerCase().contains(subStringList[i])){
                value1=baseString;
                value2=subStringList[i];
                value1=value1.replaceAll(value2,"");
                boolean flag = checkIfRemaingPartExistInDictionary(value1,subStringList);
                if(flag)
                    return "Result: "+value1+" "+value2;
                else
                    return message;
                break;
            }
        }

        return message;
    }

    private static boolean checkIfRemaingPartExistInDictionary(String subString,String[] primaryData) {
        for (String data:primaryData) {
            if(data.toLowerCase().equalsIgnoreCase(subString))
                return true;
        }
        return false;
    }

    private static List<Integer> getLengthOfSubString(List<String> subStrings) {
        List<Integer> data = new ArrayList<>();
        for (String str:subStrings) {
            data.add(str.length());
        }
        return data;
    }

    private static List<String> getTokens(String value) {
        List<String> data = new ArrayList<String>();
        StringTokenizer subStringList = new StringTokenizer(value,",");
        while(subStringList.hasMoreTokens()){
            String buffer = subStringList.nextToken();
            data.add(buffer);
        }
        return data;
    }
}
